# Ingest from Port 5044 via Filebeat using TLS
input {
   beats {
    port => "5044"
  ssl => true
  ssl_certificate => "/etc/pki/tls/certs/logstash-forwarder.crt"
    ssl_key => "/etc/pki/tls/private/logstash-forwarder.key"
   }
}

#Filer NGinx Access Files
filter {
  if [type] == "nginx_access" {
     grok {
        match => { "message" => "%{COMBINEDAPACHELOG}" }
     }
     geoip {
      source => "clientip"
     }
    date {
      match => { "timestamp" =>  "dd/MMM/YYYY:HH:mm:ss Z" }
      #remove_field =>  "timestamp" 
    }
  }
  # Parse Nginx Erorr Files
  if [type] == "nginx_error" {
    grok {
      match => { "message" => "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}(?:, client: (?<client>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})(?:, request: %{QS:request})?(?:, upstream: \"%{URI:upstream}\")?(?:, host: %{QS:host})?(?:, referrer: \"%{URI:referrer}\")"
       }
    }
    date {
      match => { "timestamp" =>  "YYYY/MM/dd HH:mm:ss" }
      #remove_field =>  "timestamp" 
    }
    geoip {
      #source => "nginx_client_ip"
    }
  }
  # Parse Syslog Files
  if [type] == "linux-syslog" {
    grok {
      match => { "message" => "%{SYSLOGBASE}" }
    }
  }
}
# Output Section
output {
   #elasticsearch {
    #hosts => [ "localhost:9200"]
   #} 
  stdout { codec => rubydebug }
}
